{%- raw -%}



{% capture sitegurus_ui_uniq_component_id %}sitegurus_component_{% increment sitegurus_gen_uniq_component_id %}{% endcapture %}
{% capture form_html_id %}form_{{sitegurus_ui_uniq_component_id}}{% endcapture %}

<style>
  /* Styles for Progress Bar and Spinner - Hooks into Siteglide JavaScript by watching for changes in form classes */




#{{form_html_id}}.form_submitting #spinner_{{sitegurus_ui_uniq_component_id}} {
  display: block !important;
}

#{{form_html_id}}[data-s-form-progress='0'] #progressBar_{{sitegurus_ui_uniq_component_id}},#{{form_html_id}} #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 0%;
}

#{{form_html_id}}[data-s-form-progress='1'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 10%;
}

#{{form_html_id}}[data-s-form-progress='2'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 20%;
}

#{{form_html_id}}[data-s-form-progress='3'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 30%;
}

#{{form_html_id}}[data-s-form-progress='4'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 40%;
}

#{{form_html_id}}[data-s-form-progress='5'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 50%;
}

#{{form_html_id}}[data-s-form-progress='6'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 60%;
}

#{{form_html_id}}[data-s-form-progress='7'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 80%;
}

#{{form_html_id}}[data-s-form-progress='8'] #progressBar_{{sitegurus_ui_uniq_component_id}}{
	width: 100%;
}
</style>

<section class="bg-white dark:bg-gray-900">
  <div class="py-8 lg:py-16 px-4 mx-auto max-w-screen-md">
    {% comment %}Note- tailwind "group" class is added to the form after submission to allow validation variants.{% endcomment %}
    {% form  html_id: form_html_id, html_class: "space-y-8" -%}
      {%- endraw -%}
      {% include "modules/module_86/form_layout_fields", collection: 'false', disable_fields: "Name" %}
      {%- raw -%}
      <div data-main-error class="hidden">
        <div class="p-4 mb-4 text-sm text-danger-700 bg-danger-100 rounded-lg dark:bg-danger-200 dark:text-danger-800" role="alert">
          <span class="font-medium">Error</span>
          <span data-main-error-message><!-- Main Siteglide validation message will appear here. --></span>
        </div>
      </div>
      <button type="submit" class="text-white bg-primary-700 hover:bg-info-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-info-800">
        <div class="flex align-center">
          <span>Submit</span>
          <div id="spinner_{{sitegurus_ui_uniq_component_id}}" class="hidden ml-2">
            <svg  role="status" class="w-6 h-6 text-gray-200 animate-spin dark:text-gray-600 fill-primary-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
              <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
            </svg>
          </div>
        </div>
      </button>
      <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
        <div id="progressBar_{{sitegurus_ui_uniq_component_id}}" class="bg-primary-600 h-2.5 rounded-full"></div>
      </div>
    {% endform %}
  </div>
</section>



<script>
  /* The following optional script allows support for validation. If removing it, make sure to return the normal Siteglide submit function to the button. */

  //Make sure Sitegurus Form API is ready.
  if(typeof sGCheckboxValidation == "function") {
    initForm_{{sitegurus_ui_uniq_component_id}}();
  } else {
    var forms_api_script = document.querySelector('#sitegurus_forms_javascript_api');
    if(forms_api_script) {
      forms_api_script.addEventListener('load', initForm_{{sitegurus_ui_uniq_component_id}});
    } else {
      console.error('Make sure the async #sitegurus_forms_javascript_api script tag is included in the <head> of the page.')
    }
  }
  //Set up Form JS
  function initForm_{{sitegurus_ui_uniq_component_id}}() {
    var form_html_id = "{{form_html_id}}";
    var form = document.querySelector('#'+form_html_id);
    var submitButton = form.querySelector('button[type=submit]');
    //Add BS support for checkboxes and radios to change events.
    var checksAndRadios = form.querySelectorAll('.required input[type=checkbox],.required input[type=radio]');
    checksAndRadios.forEach(
      function(item) {
        item.addEventListener('change', sGCheckboxValidation)
      }
    );
    //Set initial radio validation
    sGCheckboxValidation(null, {form});
    //Define custom error function for Siteglide Form
    function sGFormCustomError(error, error_details) {
      //Show main error
      error = s_error_formatter(error);
      var formErrorContainer = form.querySelector('[data-main-error]');
      if(error && formErrorContainer) {
        formErrorContainer.classList.remove('hidden');
        formErrorContainer.querySelector('[data-main-error-message]').textContent = error;
      }
      //Find individual input errors and restyle
      /* var inputErrorArray = form.querySelectorAll('.input-error');
      var inputSuccessArray = form.querySelectorAll('input:not(.input-error)');
      var inputSuccessClassList = " valid:bg-success-50 valid:border valid:border-success-500 valid:text-success-900 valid:placeholder-success-700 valid:text-sm valid:rounded-lg valid:focus:ring-success-500 valid:focus:border-success-500 valid:block valid:w-full valid:p-2.5  dark:valid:bg-gray-700  dark:valid:border-success-400";
      var labelSuccessClassList = " peer-valid:block peer-valid:mb-2 peer-valid:text-sm peer-valid:font-medium peer-valid:text-success-700  dark:peer-valid:text-success-500";
      var inputErrorClassList = " invalid:block invalid:mb-2 invalid:text-sm invalid:font-medium invalid:text-danger-700  dark:invalid:text-danger-500";
      var labelErrorClassList = " peer-invalid:bg-danger-50 peer-invalid:border peer-invalid:border-danger-500 peer-invalid:text-danger-900 peer-invalid:placeholder-danger-700 peer-invalid:text-sm peer-invalid:rounded-lg peer-invalid:focus:ring-danger-500 peer-invalid:focus:border-danger-500 peer-invalid:block peer-invalid:w-full peer-invalid:p-2.5  dark:peer-invalid:bg-danger-100  dark:peer-invalid:border-danger-400";
      inputErrorArray.forEach(
        function(item) {
          var parentElement = item.parentElement;
          var input = parentElement.querySelector('input');
          var label = parentElement.querySelector('label');
          inputSuccessClassList.forEach(
            function(class) {
              input.classList.remove(class);
            }
          );
          inputErrorClassList.forEach(
            function(class) {
              input.classList.add(class);
            }
          );
          labelSuccessClassList.forEach(
            function(class) {
              label.classList.remove(class);
            }
          );
          labelErrorClassList.forEach(
            function(class) {
              label.classList.add(class);
            }
          );
        }
      )
      inputSuccessArray.forEach(
        function(item) {
          var parentElement = item.parentElement;
          var input = parentElement.querySelector('input');
          var label = parentElement.querySelector('label');
          inputSuccessClassList.forEach(
            function(class) {
              input.classList.add(class);
            }
          );
          inputErrorClassList.forEach(
            function(class) {
              input.classList.remove(class);
            }
          );
          labelSuccessClassList.forEach(
            function(class) {
              label.classList.add(class);
            }
          );
          labelErrorClassList.forEach(
            function(class) {
              label.classList.remove(class);
            }
          );
        }
      ) */
      form.classList.add('group');
      //Scroll to first error
      var fieldError = form.querySelector('.input-error');
      if(fieldError) {
        fieldError.scrollIntoView(true);
      }
      var invalid_fields = form.querySelectorAll('.input-error');
      //Remove Siteglide error class for styling consistency in tailwind
      form.classList.add('was-submitted')
      invalid_fields.forEach(function(field){
        field.classList.remove('input-error');
      })
      //Mark invalid field classes as HTML invalid for Tailwind
      /*var invalid_fields = form.querySelectorAll('.input-error');
      var valid_fields = form.querySelectorAll('input,select,textarea:not(.input-error)');
      invalid_fields.forEach(function(item) {
        item.setCustomValidity("Invalid field.");
      });
      valid_fields.forEach(function(item) {
        item.setCustomValidity("");
      }*/

    }
    //Change Siteglide Form Submit Function to an Event Listener
    function sGFormSubmit(event) {
      sGCheckboxValidation(null, {form});
      form.classList.remove('group');
      s_form_submit_v2(event.currentTarget,form_html_id, sGFormCustomError);
    }
    submitButton.addEventListener('click', sGFormSubmit);
  }
</script> 

{%- endraw -%}